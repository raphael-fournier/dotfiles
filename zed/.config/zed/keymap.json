[
  // Globals
  {
    "bindings": {
      "cmd-h": "workspace::ActivatePaneLeft",
      "cmd-l": "workspace::ActivatePaneRight",
      "cmd-k": "workspace::ActivatePaneUp",
      "cmd-j": "workspace::ActivatePaneDown",
      "cmd-shift-j": "workspace::ToggleBottomDock",
      "cmd-shift-h": "workspace::ToggleLeftDock",
      "cmd-shift-l": "workspace::ToggleRightDock",
      "cmd-e": "project_panel::ToggleFocus",
      "cmd-i": "agent::ToggleFocus",
      "cmd-g": "git_panel::ToggleFocus",
      "cmd-n": "notification_panel::ToggleFocus"
    }
  },
  // Tubro console.log
  {
    "context": "Editor && (extension==js || extension==jsx || extension==ts || extension==tsx )",
    "bindings": {
      "cmd-shift-l": [
        "workspace::SendKeystrokes",
        "escape v i w y o console.log(`ðŸš€[DEBUG] space ~ space cmd-v :`,  space cmd-v ) escape"
      ]
    }
  },
  // Vim
  {
    "context": "VimControl && !menu",
    "bindings": {
      "g d": "editor::OpenExcerpts"
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "g r": "editor::FindAllReferences"
      // put key-bindings here if you want them to work in normal & visual mode
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "ctrl-h": "pane::ActivatePreviousItem",
      "ctrl-l": "pane::ActivateNextItem"
      // put key-bindings here if you want them to work only in normal mode
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
      // visual, visual line & visual block modes
    }
  },
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in insert mode
      // e.g.
      // "j j": "vim::NormalBefore" // remap jj in insert mode to escape.
    }
  }
]
